{"version":3,"sources":["components/Landing.js","components/About.js","components/Contact.js","components/ProjectCard.js","components/Projects.js","components/Resume.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["pad","padding","margin","Landing","style","height","width","col","className","icon","faHtml5","size","faCss3Alt","faJs","faReact","faNodeJs","Component","About","Contact","to","target","faGithub","faLinkedin","ProjectCard","state","id","name","img","desc","projects","this","map","card","key","shadow","expand","color","background","border","colored","git","page","Projects","Resume","Routes","exact","path","component","App","position","fixedHeader","title","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0OAUMA,EAAM,CACRC,QAAS,OACTC,OAAQ,QA6BGC,E,iLAxBP,OACI,yBAAKC,MAAO,CAAEC,OAAQ,MAAOC,MAAO,MAAOJ,OAAQ,OAAQD,QAAS,SAChE,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAMM,IAAK,IACR,yBAAKC,UAAU,QACd,8CACA,wCACA,6CACA,6BACA,2BACA,kBAAC,IAAD,CAAiBC,KAAMC,IAASC,KAAK,KAAKP,MAAOJ,IACjD,kBAAC,IAAD,CAAiBS,KAAMG,IAAWD,KAAK,KAAKP,MAAOJ,IACnD,kBAAC,IAAD,CAAiBS,KAAMI,IAAMF,KAAK,KAAKP,MAAOJ,IAC9C,kBAAC,IAAD,CAAiBS,KAAMK,IAASH,KAAK,KAAKP,MAAOJ,IACjD,kBAAC,IAAD,CAAiBS,KAAMM,IAAUJ,KAAK,KAAKP,MAAOJ,a,GAhBpDgB,aCiBPC,E,iLA1BP,OACI,yBAAKb,MAAO,CAAEC,OAAQ,MAAOC,MAAO,MAAOJ,OAAQ,OAAQD,QAAS,SAChE,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAMM,IAAK,IACP,yBAAKC,UAAU,SACX,wCACA,uHAGA,oHAGA,sEAGA,sF,GAjBRQ,aCIdhB,EAAM,CACRC,QAAS,OACTC,OAAQ,QAuBGgB,E,iLAlBP,OACI,yBAAKd,MAAO,CAAEC,OAAQ,MAAOC,MAAO,MAAOJ,OAAQ,OAAQD,QAAS,SACpE,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAMM,IAAK,IACP,yBAAKC,UAAU,WACX,uCACA,2BACI,kBAAC,IAAD,CAAMW,GAAG,6BAA6BC,OAAO,UAAS,kBAAC,IAAD,CAAiBX,KAAMY,IAAUV,KAAK,KAAKP,MAAOJ,KACxG,kBAAC,IAAD,CAAMmB,GAAG,8CAA8CC,OAAO,UAAS,kBAAC,IAAD,CAAiBX,KAAMa,IAAYX,KAAK,KAAKP,MAAOJ,c,GAVjIgB,a,gBC8BPO,E,2MApCXC,MAAQ,CACJC,GAAI,EACJC,KAAM,GACNC,IAAK,GACLC,KAAM,GACNC,Y,wEAMA,OAFkB,YAAOC,KAAKN,MAAMK,UAGnBE,KAAI,SAAAC,GACb,OACJ,6BAEI,kBAAC,OAAD,CAAMzB,IAAK,EAAG0B,IAAKD,EAAKP,IACpB,kBAAC,OAAD,CAAMS,OAAQ,EAAG9B,MAAO,CAACE,MAAO,QAASD,OAAQ,QAASH,OAAQ,SAC9D,kBAAC,YAAD,CAAWiC,QAAM,EAAC/B,MAAO,CAACgC,MAAO,OAAQC,WAAW,OAAD,OAASL,EAAKL,IAAd,0CAA2DK,EAAKN,MACnH,kBAAC,WAAD,KACKM,EAAKJ,MAEV,kBAAC,cAAD,CAAaU,QAAM,GACf,kBAAC,SAAD,CAAQC,SAAO,GAAC,kBAAC,IAAD,CAAMpB,GAAIa,EAAKQ,KAAf,gBAChB,kBAAC,SAAD,CAAQD,SAAO,GAAC,kBAAC,IAAD,CAAMpB,GAAIa,EAAKS,MAAf,wB,GAzBlBzB,aCYX0B,E,iLAVP,OACI,yBAAKtC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,MAAOJ,OAAQ,OAAQD,QAAS,SACjE,kBAAC,OAAD,CAAMG,MAAO,CAAEH,QAAS,OAAQC,OAAQ,SACpC,kBAAC,EAAD,Y,GALGc,aCeR2B,E,iLAfP,OACI,yBAAKvC,MAAO,CAAEC,OAAQ,MAAOC,MAAO,MAAOJ,OAAQ,OAAQD,QAAS,SAChE,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAMM,IAAK,IACP,yBAAKC,UAAU,UACX,sCACA,mD,GARPQ,a,QCgBN4B,EAVA,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5C,IACjC,kBAAC,IAAD,CAAO2C,KAAK,SAASC,UAAW9B,IAChC,kBAAC,IAAD,CAAO6B,KAAK,WAAWC,UAAW7B,IAClC,kBAAC,IAAD,CAAO4B,KAAK,YAAYC,UAAWL,IACnC,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWJ,MCuB1BK,E,iLA/Bb,OAGE,yBAAK5C,MAAO,CAACC,OAAQ,QAAS4C,SAAU,aACxC,kBAAC,SAAD,CAAQC,aAAW,GACf,kBAAC,SAAD,CAAQ1C,UAAU,eAAe2C,MAAO,8BAAM,0BAAM/C,MAAO,CAAEgC,MAAO,SAAtB,oBAC1C,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMjB,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,kBAAC,SAAD,CAAQgC,MAAM,aACV,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMhC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,kBAAC,UAAD,KACI,kBAAC,EAAD,a,GA1BMH,aCMEoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCTNC,IAASC,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBC,SAASC,eAAe,SD0H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.172f4f18.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport '../App.css';\r\nimport { faHtml5 } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faCss3Alt } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faJs } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faReact } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faNodeJs } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst pad = {\r\n    padding: '10px',\r\n    margin: '10px'\r\n}\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return(\r\n            <div style={{ height: '90%', width: '80%', margin: 'auto', padding: '10px'}}>\r\n                <Grid>\r\n                    <Cell col={12}>\r\n                       <div className=\"home\">\r\n                        <h1>Michael Partin</h1>\r\n                        <h3>Napa, CA</h3>\r\n                        <h2>Web Developer</h2>\r\n                        <hr />\r\n                        <p>\r\n                        <FontAwesomeIcon icon={faHtml5} size='8x' style={pad}/> \r\n                        <FontAwesomeIcon icon={faCss3Alt} size='8x' style={pad}/>\r\n                        <FontAwesomeIcon icon={faJs} size='8x' style={pad}/>\r\n                        <FontAwesomeIcon icon={faReact} size='8x' style={pad}/>\r\n                        <FontAwesomeIcon icon={faNodeJs} size='8x' style={pad}/>\r\n                        </p>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport '../App.css';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return(\r\n            <div style={{ height: '90%', width: '80%', margin: 'auto', padding: '10px'}}>\r\n                <Grid>\r\n                    <Cell col={12}>\r\n                        <div className=\"about\">\r\n                            <h2>Who I am</h2>\r\n                            <h4>\r\n                                Web developer. Graphic designer. Print Nerd. Audible/podcast enthusiast. Jeeps. Doggos.\r\n                            </h4>\r\n                            <h4>\r\n                                HTML5, CSS3, JavaScript, React, Nodejs, Express, MongoDB, Mongoose, MySQL, Sequelize\r\n                            </h4>\r\n                            <h4>\r\n                                Adobe Illustrator, PhotoShop, InDesign\r\n                            </h4>\r\n                            <h4>\r\n                                Management Experience. Team building. Lean/6s.\r\n                            </h4>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>    \r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport '../App.css';\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst pad = {\r\n    padding: '10px',\r\n    margin: '10px'\r\n}\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return(\r\n            <div style={{ height: '90%', width: '80%', margin: 'auto', padding: '10px'}}>\r\n            <Grid>\r\n                <Cell col={12}>\r\n                    <div className=\"contact\">\r\n                        <h2>Contact</h2>\r\n                        <p>\r\n                            <Link to=\"https://github.com/rev1311\" target=\"_blank\"><FontAwesomeIcon icon={faGithub} size='8x' style={pad}/></Link> \r\n                            <Link to=\"https://www.linkedin.com/in/michael-partin/\" target=\"_blank\"><FontAwesomeIcon icon={faLinkedin} size='8x' style={pad}/></Link> \r\n                        </p>\r\n                    </div>\r\n                </Cell>\r\n            </Grid>    \r\n        </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Cell, Card, CardTitle, CardText, Button, CardActions } from 'react-mdl';\r\nimport { Link } from 'react-router-dom';\r\nimport projects from '../projects.json';\r\n\r\n\r\nclass ProjectCard extends Component {\r\n    state = {\r\n        id: 0,\r\n        name: \"\",\r\n        img: \"\",\r\n        desc: \"\",\r\n        projects\r\n    }\r\n\r\n    render() {\r\n        const projectcards = [...this.state.projects];\r\n\r\n        return (\r\n            projectcards.map(card => {\r\n                return (\r\n            <div>\r\n            \r\n                <Cell col={3} key={card.id}>\r\n                    <Card shadow={0} style={{width: '320px', height: '320px', margin: 'auto'}}>\r\n                        <CardTitle expand style={{color: '#fff', background: `url(${card.img}) bottom right 15% no-repeat #46B6AC`}}>{card.name}</CardTitle>\r\n                        <CardText>\r\n                            {card.desc}\r\n                        </CardText>\r\n                        <CardActions border>\r\n                            <Button colored><Link to={card.git}>View Source</Link></Button>\r\n                            <Button colored><Link to={card.page}>View App</Link></Button>\r\n                        </CardActions>\r\n                    </Card>        \r\n                </Cell>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n))}\r\n\r\n}\r\n\r\nexport default ProjectCard;\r\n","import React, { Component } from 'react';\r\nimport { Grid } from 'react-mdl';\r\nimport '../App.css';\r\nimport ProjectCard from './ProjectCard';\r\n\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return(\r\n            <div style={{ height: '100%', width: '80%', margin: 'auto', padding: '10px' }}>\r\n                <Grid style={{ padding: '10px', margin: 'auto' }}>\r\n                    <ProjectCard />\r\n                </Grid> \r\n            </div>      \r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport '../App.css';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return(\r\n            <div style={{ height: '90%', width: '80%', margin: 'auto', padding: '10px'}}>\r\n                <Grid>\r\n                    <Cell col={12}>\r\n                        <div className=\"resume\">\r\n                            <h2>Resume</h2>\r\n                            <h4>coming soon</h4>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>    \r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport Landing from './Landing';\r\nimport About from './About';\r\nimport Contact from './Contact';\r\nimport Projects from './Projects';\r\nimport Resume from './Resume';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route path=\"/About\" component={About} />\r\n        <Route path=\"/Contact\" component={Contact} />\r\n        <Route path=\"/Projects\" component={Projects} />\r\n        <Route path=\"/Resume\" component={Resume} />\r\n    </Switch>\r\n)\r\n\r\nexport default Routes;","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport { Link } from 'react-router-dom';\nimport Routes from './components/Routes';\n\nclass App extends Component {\n  render() {\n  return (\n\n\n    <div style={{height: '700px', position: 'relative'}}>\n    <Layout fixedHeader>\n        <Header className='header-color' title={<span><span style={{ color: '#ddd' }}>Michael Partin</span></span>}>\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/Resume\">Resume</Link>\n                <Link to=\"/About\">About</Link>\n                <Link to=\"/Projects\">Projects</Link>\n                <Link to=\"/Contact\">Contact</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"Navigator\">\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/Resume\">Resume</Link>\n                <Link to=\"/About\">About</Link>\n                <Link to=\"/Projects\">Projects</Link>\n                <Link to=\"/Contact\">Contact</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <Routes />\n        </Content>\n    </Layout>\n</div>\n\n\n  )}};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}